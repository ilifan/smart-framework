<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:sharding="http://shardingjdbc.io/schema/shardingjdbc/sharding"
       xmlns:master-slave="http://shardingjdbc.io/schema/shardingjdbc/masterslave"
       xmlns:reg="http://shardingjdbc.io/schema/shardingjdbc/orchestration/reg"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://shardingjdbc.io/schema/shardingjdbc/sharding http://shardingjdbc.io/schema/shardingjdbc/sharding/sharding.xsd
        http://shardingjdbc.io/schema/shardingjdbc/masterslave http://shardingjdbc.io/schema/shardingjdbc/masterslave/master-slave.xsd
        http://shardingjdbc.io/schema/shardingjdbc/orchestration/reg http://shardingjdbc.io/schema/shardingjdbc/orchestration/reg/reg.xsd">

    <!-- 注册中心配置 -->
    <reg:zookeeper id="jdbcCenter" namespace="${jdbc.zk.namespace}" server-lists="${jdbc.zk.server.list}"
                   base-sleep-time-milliseconds="${jdbc.zk.base.sleep.time}"
                   max-sleep-time-milliseconds="${jdbc.zk.max.sleep.time}" max-retries="${jdbc.zk.max.retries}"/>

    <!-- 基本数据源配置 -->
    <bean id="abstractDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
          destroy-method="close" abstract="true">
        <!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
        <property name="driverClassName" value="${jdbc.driver}"/>

        <!-- 基本属性 demouser、password -->
        <!--<property name="url" value="${jdbc.url}"/>-->
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="${jdbc.pool.init}"/>
        <property name="minIdle" value="${jdbc.pool.minIdle}"/>
        <property name="maxActive" value="${jdbc.pool.maxActive}"/>

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <property name="validationQuery" value="${jdbc.testSql}"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>

        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat"/>
    </bean>

    <bean id="demo_ds_master_0" parent="abstractDataSource">
        <property name="url" value="${jdbc.url.m0}"/>
    </bean>

    <bean id="demo_ds_master_0_slave_0" parent="abstractDataSource">
        <property name="url" value="${jdbc.url.m0.s0}"/>
    </bean>

    <bean id="demo_ds_master_0_slave_1" parent="abstractDataSource">
        <property name="url" value="${jdbc.url.m0.s1}"/>
    </bean>

    <bean id="demo_ds_master_1" parent="abstractDataSource">
        <property name="url" value="${jdbc.url.m1}"/>
    </bean>

    <bean id="demo_ds_master_1_slave_0" parent="abstractDataSource">
        <property name="url" value="${jdbc.url.m1.s0}"/>
    </bean>

    <bean id="demo_ds_master_1_slave_1" parent="abstractDataSource">
        <property name="url" value="${jdbc.url.m1.s1}"/>
    </bean>

    <!-- 读写分离数据源配置 -->
    <master-slave:data-source id="demo_ds_0" master-data-source-name="demo_ds_master_0"
                              slave-data-source-names="demo_ds_master_0_slave_0, demo_ds_master_0_slave_1"
                              strategy-type="ROUND_ROBIN"/>
    <master-slave:data-source id="demo_ds_1" master-data-source-name="demo_ds_master_1"
                              slave-data-source-names="demo_ds_master_1_slave_0, demo_ds_master_1_slave_1"
                              strategy-type="ROUND_ROBIN"/>

    <!-- 分片策略配置 -->
    <sharding:standard-strategy id="databaseStrategy" sharding-column="create_user_id"
                                precise-algorithm-class="com.yryz.smart.jdbc.core.algorithm.DatabaseHashingShardingAlgorithm"/>
    <sharding:standard-strategy id="tableStrategy" sharding-column="kid"
                                precise-algorithm-class="com.yryz.smart.jdbc.core.algorithm.TableHashingShardingAlgorithm"/>

    <!-- 分片数据源配置 -->
    <sharding:data-source id="shardingDataSource">
        <sharding:sharding-rule data-source-names="demo_ds_0,demo_ds_1" default-data-source-name="demo_ds_0"
                                default-database-strategy-ref="databaseStrategy"
                                default-table-strategy-ref="tableStrategy">
            <sharding:table-rules>
                <sharding:table-rule logic-table="t_order" actual-data-nodes="demo_ds_${[0,1]}.t_order_${[0,1]}"/>
                <sharding:table-rule logic-table="t_order_item"
                                     actual-data-nodes="demo_ds_${[0,1]}.t_order_item_${[0,1]}"/>
            </sharding:table-rules>
        </sharding:sharding-rule>
        <sharding:props>
            <prop key="sql.show">false</prop>
        </sharding:props>
    </sharding:data-source>

    <!-- 数据源，数据表的一致性hash映射关系配置 -->
    <bean class="com.yryz.smart.jdbc.core.ConsistentHashingMapping">
        <property name="databaseHashingMapping">
            <map>
                <entry key="demo_ds_0" value="0" value-type="java.lang.Integer"/>
                <entry key="demo_ds_1" value="512" value-type="java.lang.Integer"/>
            </map>
        </property>
    </bean>

    <!-- 事务配置 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="shardingDataSource"/>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- ORM配置 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="shardingDataSource"/>
        <property name="mapperLocations" value="classpath*:com/yryz/smart/jdbc/**/mapper/*.xml"/>
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageHelper">
                    <property name="properties">
                        <value>
                            dialect=mysql
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.yryz.smart.jdbc.**.dao.persistence"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="annotationClass" value="org.springframework.stereotype.Repository"/>
    </bean>
</beans>
